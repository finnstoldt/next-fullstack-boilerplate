name: CD

on:
  push:
    tags:
      - "v*"

  workflow_dispatch:

jobs:
  build-and-push-storefront:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: tag
        run: echo ${{ github.ref_name }}
      - name: Build and push Docker image
        uses: ./.github/actions/build-and-push
        with:
          package: storefront
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ github.event.release.tag_name }}
          build-arg-1: STOREFRONT_BASE_PATH=${{ secrets.STOREFRONT_BASE_PATH }}
          build-arg-2: API_URL=${{ secrets.API_URL }}

  build-and-push-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build and push Docker image
        uses: ./.github/actions/build-and-push
        with:
          package: api
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ github.event.release.tag_name }}

  build-and-push-admin:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build and push Docker image
        uses: ./.github/actions/build-and-push
        with:
          package: admin
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ github.event.release.tag_name }}
          build-arg-1: API_URL=${{ secrets.API_URL }}
          build-arg-2: ADMIN_BASE_PATH=${{ secrets.ADMIN_BASE_PATH }}

  deploy:
    runs-on: ubuntu-latest

    needs: [build-and-push-storefront, build-and-push-api, build-and-push-admin]

    steps:
      - name: Invoke deployment hook
        uses: distributhor/workflow-webhook@v2
        env:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
